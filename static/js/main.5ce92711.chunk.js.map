{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["BasicForm","props","useState","isFirstNameValid","setIsFirstNameValid","isFirstNameTouched","setIsFirstNameTouched","firstNameRef","useRef","isLastNameValid","setIsLastNameValid","isLastNameTouched","setIsLastNameTouched","lastNameRef","isEmailValid","setIsEmailValid","isEmailTouched","setIsEmailTouched","emailRef","firstNameInvalid","firstNameClasses","lastNameInvalid","lastNameClasses","emailInvalid","emailClasses","formIsValid","onSubmit","e","preventDefault","current","value","className","htmlFor","type","id","ref","onBlur","trim","includes","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"0LAwHeA,EAtHG,SAACC,GACjB,MAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAoDF,oBAAS,GAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KACMC,EAAeC,iBAAO,IAE5B,EAA8CN,oBAAS,GAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAkDR,oBAAS,GAA3D,mBAAOS,EAAP,KAA0BC,EAA1B,KACMC,EAAcL,iBAAO,IAE3B,EAAwCN,oBAAS,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAA4Cb,oBAAS,GAArD,mBAAOc,EAAP,KAAuBC,EAAvB,KACMC,EAAWV,iBAAO,IAgClBW,EAAmBd,IAAuBF,EAC1CiB,EAAmBD,EACrB,uBACA,eAEEE,EAAkBV,IAAsBF,EACxCa,EAAkBD,EACpB,uBACA,eAEEE,EAAeP,IAAmBF,EAClCU,EAAeD,EAAe,uBAAyB,eAEvDE,EAActB,GAAoBM,GAAmBK,EAoB3D,OACE,uBAAMY,SAnBc,SAACC,GACrBA,EAAEC,iBACGH,IAGLnB,GAAsB,GACtBM,GAAqB,GACrBK,GAAkB,GAElBb,GAAoB,GACpBM,GAAmB,GACnBK,GAAgB,GAEhBR,EAAasB,QAAQC,MAAQ,GAC7BjB,EAAYgB,QAAQC,MAAQ,GAC5BZ,EAASW,QAAQC,MAAQ,KAIzB,UACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAWX,EAAhB,UACE,uBAAOY,QAAQ,OAAf,wBACA,uBACEC,KAAK,OACLC,GAAG,OACHC,IAAK5B,EACL6B,OAxEmB,WAC3B9B,GAAsB,GACqC,KAAtCC,EAAasB,QAAQC,MAAMO,OAE9CjC,GAAoB,GAGtBA,GAAoB,MAmEbe,GACC,mBAAGY,UAAU,aAAb,8CAGJ,sBAAKA,UAAWT,EAAhB,UACE,uBAAOU,QAAQ,OAAf,uBACA,uBACEC,KAAK,OACLC,GAAG,OACHC,IAAKtB,EACLuB,OA1EkB,WAC1BxB,GAAqB,GACqC,KAArCC,EAAYgB,QAAQC,MAAMO,OAE7C3B,GAAmB,GAGrBA,GAAmB,MAqEZW,GACC,mBAAGU,UAAU,aAAb,gDAIN,sBAAKA,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,4BACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,IAAKjB,EAAUkB,OAzEzB,WACvBnB,GAAkB,GACGC,EAASW,QAAQC,MAAMO,OAAOC,SAAS,KAE1DvB,GAAgB,GAGlBA,GAAgB,MAmEXQ,GACC,mBAAGQ,UAAU,aAAb,wDAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQQ,UAAWd,EAAnB,0BCtGOe,MATf,WACE,OACE,qBAAKT,UAAU,MAAf,SAEE,cAAC,EAAD,OCFNU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.5ce92711.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst BasicForm = (props) => {\r\n  const [isFirstNameValid, setIsFirstNameValid] = useState(false);\r\n  const [isFirstNameTouched, setIsFirstNameTouched] = useState(false);\r\n  const firstNameRef = useRef(\"\");\r\n\r\n  const [isLastNameValid, setIsLastNameValid] = useState(false);\r\n  const [isLastNameTouched, setIsLastNameTouched] = useState(false);\r\n  const lastNameRef = useRef(\"\");\r\n\r\n  const [isEmailValid, setIsEmailValid] = useState(false);\r\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\r\n  const emailRef = useRef(\"\");\r\n\r\n  const firstNameBlurHandler = () => {\r\n    setIsFirstNameTouched(true);\r\n    const isValueValid = firstNameRef.current.value.trim() !== \"\";\r\n    if (isValueValid) {\r\n      setIsFirstNameValid(true);\r\n      return;\r\n    }\r\n    setIsFirstNameValid(false);\r\n  };\r\n\r\n  const lastNameBlurHandler = () => {\r\n    setIsLastNameTouched(true);\r\n    const isValueValid = lastNameRef.current.value.trim() !== \"\";\r\n    if (isValueValid) {\r\n      setIsLastNameValid(true);\r\n      return;\r\n    }\r\n    setIsLastNameValid(false);\r\n  };\r\n\r\n  const emailBlurHandler = () => {\r\n    setIsEmailTouched(true);\r\n    const isValueValid = emailRef.current.value.trim().includes(\"@\");\r\n    if (isValueValid) {\r\n      setIsEmailValid(true);\r\n      return;\r\n    }\r\n    setIsEmailValid(false);\r\n  };\r\n\r\n  const firstNameInvalid = isFirstNameTouched && !isFirstNameValid;\r\n  const firstNameClasses = firstNameInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const lastNameInvalid = isLastNameTouched && !isLastNameValid;\r\n  const lastNameClasses = lastNameInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const emailInvalid = isEmailTouched && !isEmailValid;\r\n  const emailClasses = emailInvalid ? \"form-control invalid\" : \"form-control\";\r\n\r\n  const formIsValid = isFirstNameValid && isLastNameValid && isEmailValid;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n    setIsFirstNameTouched(false);\r\n    setIsLastNameTouched(false);\r\n    setIsEmailTouched(false);\r\n\r\n    setIsFirstNameValid(false);\r\n    setIsLastNameValid(false);\r\n    setIsEmailValid(false);\r\n\r\n    firstNameRef.current.value = \"\";\r\n    lastNameRef.current.value = \"\";\r\n    emailRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"control-group\">\r\n        <div className={firstNameClasses}>\r\n          <label htmlFor=\"name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            ref={firstNameRef}\r\n            onBlur={firstNameBlurHandler}\r\n          />\r\n          {firstNameInvalid && (\r\n            <p className=\"error-text\">First Name must not be empty!</p>\r\n          )}\r\n        </div>\r\n        <div className={lastNameClasses}>\r\n          <label htmlFor=\"name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            ref={lastNameRef}\r\n            onBlur={lastNameBlurHandler}\r\n          />\r\n          {lastNameInvalid && (\r\n            <p className=\"error-text\">Last Name must not be empty!</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={emailClasses}>\r\n        <label htmlFor=\"name\">E-Mail Address</label>\r\n        <input type=\"text\" id=\"name\" ref={emailRef} onBlur={emailBlurHandler} />\r\n        {emailInvalid && (\r\n          <p className=\"error-text\">Email must include '@' or not be empty!</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n","import BasicForm from './components/BasicForm';\r\n// import SimpleInput from './components/SimpleInput';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      {/* <SimpleInput /> */}\r\n      <BasicForm/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}